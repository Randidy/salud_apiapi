package com.saludvital.mssaludvital.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.ExternalDocumentation;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class SwaggerConfig {

    @Bean
    public OpenAPI customOpenAPI() {
        final String securitySchemeName = "bearerAuth";
        
        return new OpenAPI()
                .info(new Info()
                        .title("üè• MS SaludVital - Sistema de Gesti√≥n M√©dica")
                        .description("""
                                # üéØ **API REST para Sistema de Gesti√≥n M√©dica Integral**
                                
                                Sistema completo para la gesti√≥n de **pacientes, m√©dicos, citas m√©dicas, recetas y medicamentos** 
                                desarrollado con **Spring Boot 3.3.0** y **JWT Authentication**.
                                
                                ## üöÄ **Inicio R√°pido**
                                
                                ### **1. üîê Autenticaci√≥n**
                                Todos los endpoints (excepto `/auth/**`) requieren autenticaci√≥n JWT:
                                
                                1. **Login**: `POST /auth/login` con credenciales
                                2. **Copiar token** de la respuesta  
                                3. **Autorizar**: Hacer clic en el bot√≥n üîí **Authorize** arriba
                                4. **Pegar token**: En el formato `Bearer {tu_token}`
                                
                                ### **2. üë• Usuarios de Prueba**
                                
                                | **ROL** | **EMAIL** | **PASSWORD** | **PERMISOS** |
                                |---------|-----------|--------------|--------------|
                                | üëë **ADMIN** | `admin@saludvital.com` | `admin123` | **Acceso total** - Gesti√≥n usuarios, supervisi√≥n |
                                | ü©∫ **M√âDICO** | `medico@saludvital.com` | `medico123` | **Gesti√≥n m√©dica** - Citas y recetas |
                                | üë§ **PACIENTE** | `paciente@saludvital.com` | `paciente123` | **Autogesti√≥n** - Solicitar citas, ver expediente |
                                
                                ### **3. üìã Casos de Uso Sugeridos**
                                
                                #### **üëë Como Admin:**
                                1. Login ‚Üí `POST /auth/login`
                                2. Crear m√©dico ‚Üí `POST /admin/medicos`
                                3. Ver todas las citas ‚Üí `GET /citas`
                                4. Crear medicamento ‚Üí `POST /medicamentos`
                                
                                #### **ü©∫ Como M√©dico:**
                                1. Login ‚Üí `POST /auth/login`
                                2. Ver mis citas ‚Üí `GET /citas/medico`
                                3. Completar cita ‚Üí `PUT /citas/{id}/completar`
                                4. Emitir receta ‚Üí `POST /recetas/nueva`
                                
                                #### **üë§ Como Paciente:**
                                1. Login ‚Üí `POST /auth/login`
                                2. Ver m√©dicos ‚Üí `GET /medico/disponibles`
                                3. Solicitar cita ‚Üí `POST /citas/nueva`
                                4. Ver mis recetas ‚Üí `GET /recetas/mis-recetas`
                                
                                ## ‚öôÔ∏è **Reglas de Negocio**
                                
                                - ‚úÖ **Citas**: M√°ximo 3/d√≠a por paciente, cancelaci√≥n 2h antes
                                - ‚úÖ **Recetas**: Validaci√≥n de alergias, caducidad 30 d√≠as
                                - ‚úÖ **JWT**: Tokens v√°lidos por 24 horas
                                - ‚úÖ **Roles**: Autorizaci√≥n granular por endpoint
                                
                                ## üìö **Documentaci√≥n Adicional**
                                
                                - **üõ°Ô∏è Roles y Permisos**: Ver archivo `ROLES_Y_PERMISOS.md`
                                - **üîó Postman**: Importar `MS_SaludVital_Postman_Collection.json`
                                - **üìñ README**: Gu√≠a completa de instalaci√≥n y uso
                                """)
                        .version("v1.0.0")
                        .contact(new Contact()
                                .name("Equipo MS SaludVital")
                                .email("soporte@saludvital.com")
                                .url("https://github.com/tu-usuario/ms-saludvital"))
                        .license(new License()
                                .name("MIT License")
                                .url("https://opensource.org/licenses/MIT")))
                .externalDocs(new ExternalDocumentation()
                        .description("üìã Documentaci√≥n completa en GitHub")
                        .url("https://github.com/tu-usuario/ms-saludvital/blob/main/README.md"))
                .servers(List.of(
                        new Server()
                                .url("http://localhost:8081")
                                .description("üñ•Ô∏è Servidor Local de Desarrollo"),
                        new Server()
                                .url("https://api.saludvital.com")
                                .description("üåê Servidor de Producci√≥n (Ejemplo)")
                ))
                .addSecurityItem(new SecurityRequirement()
                        .addList(securitySchemeName))
                .components(new Components()
                        .addSecuritySchemes(securitySchemeName, new SecurityScheme()
                                .name(securitySchemeName)
                                .type(SecurityScheme.Type.HTTP)
                                .scheme("bearer")
                                .bearerFormat("JWT")
                                .description("""
                                        **üîë Autenticaci√≥n JWT Bearer Token**
                                        
                                        Para usar la API:
                                        1. Hacer login en `/auth/login`
                                        2. Copiar el token de la respuesta
                                        3. Usar formato: `Bearer {token}`
                                        
                                        **Ejemplo:**
                                        ```
                                        Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjM5NTY3ODkwLCJleHAiOjE2Mzk2NTQyOTB9.signature
                                        ```
                                        
                                        **‚è∞ Validez:** 24 horas
                                        """)));
    }
}